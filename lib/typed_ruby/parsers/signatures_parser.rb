#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'typed_ruby/parsers/builder'

module TypedRuby
  module AST
    class SignaturesParser < Racc::Parser

module_eval(<<'...end signatures_parser.y/module_eval...', 'signatures_parser.y', 185)

  def initialize(source, file)
    @buffer = StringScanner.new(source)
    @file = file
    # @yydebug = true
  end

  def import_into(registry)
    @registry = registry
    @builder = TypedRuby::AST::Builder.new(registry)
    @queue = []
    do_parse
  end

  MAP = {
    /class\b/         => :kCLASS,
    /module\b/        => :kMODULE,
    /end\b/           => :kEND,
    /def\b/           => :kDEF,
    /\.\.\./          => :kANY_ARGS,
    /Any/             => :kANY,
    /include\b/       => :kINCLUDE,
    /prepend\b/       => :kPREPEND,

    /:/               => :tCOLON,
    /\(/              => :tLPAREN,
    /\)/              => :tRPAREN,
    /\|/              => :tPIPE,
    /,/               => :tCOMMA,
    /\?/              => :tQM,
    /&/               => :tAMP,

    /\<\=\>/          => :tIDENTIFIER,
    /\<\=/            => :tIDENTIFIER,
    /\>\=/            => :tIDENTIFIER,

    /</               => :tLT,
    />/               => :tGT,
    /\*/              => :tSTAR,
    /-/               => :tMINUS,

    /^__RUBY__$/      => :tRUBYCODE,

    /\!\=/            => :tIDENTIFIER,
    /\!~/             => :tIDENTIFIER,
    /\!/              => :tIDENTIFIER,
    /\=\=\=/          => :tIDENTIFIER,
    /\=~/             => :tIDENTIFIER,
    /\=\=/            => :tIDENTIFIER,
    /\+/              => :tIDENTIFIER,
    /\w+\?/           => :tIDENTIFIER,
    /\w+\!/           => :tIDENTIFIER,
    /\w+\b/           => :tIDENTIFIER,
  }.freeze

  def next_token
    @buffer.skip(/(\s+|\#.*$)*/)

    _, token_type = MAP.detect { |rule, token| @buffer.scan(rule) }

    if token_type == :tRUBYCODE
      code = @buffer.scan_until(/^__RUBY__$/).sub('__RUBY__', '')
      return [:tRUBYCODE, code]
    end

    token_value = @buffer.matched
    token_pos   = @buffer.pos
    token       = [token_value, token_pos]

    if @queue.last == :kDEF && %i[tLT tGT kINCLUDE kPREPEND kCLASS].include?(token_type)
      return [:tIDENTIFIER, token]
    end

    @queue << token_type

    if token_type
      [token_type, token]
    else
      [false, '$end']
    end
  end

  SyntaxError = Class.new(StandardError)

  def on_error(error_token_id, error_value, value_stack)
    error_token = token_to_str(error_token_id)
    token_value, token_pos = *error_value

    @buffer.pos = token_pos
    @buffer.pos -=1 until @buffer.beginning_of_line?

    line_start = @buffer.pos

    line = @buffer.scan_until(/$/)
    lineno = @buffer.string[0..@buffer.pos].count("\n")

    error = SyntaxError.new(<<~MESSAGE)

      Unexpected token #{error_token}:

          #{line}
          #{' ' * (token_pos - line_start - token_value.length) + '^' * token_value.length}

    MESSAGE

    error.set_backtrace(["#{@file}:#{lineno}"])

    raise error
  end
...end signatures_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     8,    10,     8,    10,    40,    37,    53,    56,    53,    56,
    57,    53,    57,    50,    27,    50,    51,    52,    51,    52,
    11,    63,    11,    24,    20,    14,    20,    21,    22,    21,
    22,    20,    26,    56,    21,    22,    57,    56,    56,    58,
    57,    57,    66,    67,    36,    35,    59,    60,    53,    23,
    53,    65,    68,    12,    70,    53,    76,    28,    30,    31,
    33,    32,    34 ]

racc_action_check = [
     0,     0,     3,     3,    35,    33,    59,    36,    35,    65,
    36,    51,    65,    59,    12,    35,    59,    59,    35,    35,
     0,    51,     3,     9,     9,     7,     7,     9,     9,     7,
     7,    16,    10,    66,    16,    16,    66,    67,    68,    38,
    67,    68,    55,    55,    30,    30,    39,    49,    50,     8,
    52,    53,    58,     1,    61,    63,    72,    15,    20,    21,
    23,    22,    25 ]

racc_action_pointer = [
    -2,    53,   nil,     0,   nil,   nil,   nil,    21,    39,    19,
    22,   nil,    14,   nil,   nil,    53,    26,   nil,   nil,   nil,
    48,    49,    51,    42,   nil,    58,   nil,   nil,   nil,   nil,
    33,   nil,   nil,    -5,   nil,    -2,     0,   nil,    26,    30,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
    38,     1,    40,    33,   nil,    28,   nil,   nil,    41,    -4,
   nil,    43,   nil,    45,   nil,     2,    26,    30,    31,   nil,
   nil,   nil,    37,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -50,    -2,    -3,    -5,    -6,    -7,   -50,   -50,   -50,
   -50,   -49,   -50,    -4,    -8,   -50,   -15,   -17,   -18,   -19,
   -50,   -50,   -50,   -10,   -12,   -50,   -14,    77,    -9,   -16,
   -50,   -22,   -23,   -50,   -13,   -31,   -50,   -11,   -50,   -29,
   -30,   -32,   -34,   -35,   -36,   -37,   -38,   -39,   -40,   -41,
   -50,   -50,   -50,   -50,   -21,   -24,   -27,   -28,   -50,   -50,
   -44,   -42,   -43,   -50,   -47,   -50,   -50,   -50,   -50,   -33,
   -45,   -46,   -50,   -25,   -26,   -20,   -48 ]

racc_goto_table = [
    54,    41,    61,    62,    64,    15,     2,    25,    38,    13,
    39,     1,   nil,   nil,    29,    71,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    69,   nil,   nil,   nil,    72,
    73,    74,    75 ]

racc_goto_check = [
    15,    18,    26,    26,    26,     8,     2,     8,    14,     2,
    17,     1,   nil,   nil,     8,    26,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,    15,
    15,    15,    15 ]

racc_goto_pointer = [
   nil,    11,     6,   nil,   nil,   nil,   nil,   nil,    -2,   nil,
   nil,   nil,   nil,   nil,   -27,   -36,   nil,   -25,   -34,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -48 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,   nil,     9,
    16,    17,    18,    19,   nil,   nil,    55,   nil,   nil,    42,
    43,    44,    45,    46,    47,    48,    49 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 25, :_reduce_none,
  2, 25, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  2, 27, :_reduce_none,
  3, 27, :_reduce_9,
  2, 30, :_reduce_10,
  4, 30, :_reduce_11,
  2, 28, :_reduce_none,
  3, 28, :_reduce_13,
  2, 32, :_reduce_14,
  1, 31, :_reduce_15,
  2, 31, :_reduce_16,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  7, 36, :_reduce_20,
  4, 36, :_reduce_21,
  2, 34, :_reduce_22,
  2, 35, :_reduce_23,
  1, 38, :_reduce_none,
  3, 38, :_reduce_25,
  3, 38, :_reduce_26,
  1, 38, :_reduce_27,
  1, 39, :_reduce_28,
  1, 37, :_reduce_29,
  1, 37, :_reduce_30,
  0, 37, :_reduce_31,
  1, 40, :_reduce_32,
  3, 40, :_reduce_33,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 42, :_reduce_41,
  2, 43, :_reduce_42,
  2, 44, :_reduce_43,
  2, 45, :_reduce_44,
  3, 46, :_reduce_45,
  3, 47, :_reduce_46,
  2, 48, :_reduce_47,
  4, 49, :_reduce_48,
  1, 29, :_reduce_49 ]

racc_reduce_n = 50

racc_shift_n = 77

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kEND => 4,
  :kDEF => 5,
  :kANY_ARGS => 6,
  :kANY => 7,
  :kINCLUDE => 8,
  :kPREPEND => 9,
  :tIDENTIFIER => 10,
  :tCOLON => 11,
  :tLPAREN => 12,
  :tRPAREN => 13,
  :tPIPE => 14,
  :tMINUS => 15,
  :tCOMMA => 16,
  :tQM => 17,
  :tLT => 18,
  :tGT => 19,
  :tSTAR => 20,
  :tAMP => 21,
  :tRUBYCODE => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kEND",
  "kDEF",
  "kANY_ARGS",
  "kANY",
  "kINCLUDE",
  "kPREPEND",
  "tIDENTIFIER",
  "tCOLON",
  "tLPAREN",
  "tRPAREN",
  "tPIPE",
  "tMINUS",
  "tCOMMA",
  "tQM",
  "tLT",
  "tGT",
  "tSTAR",
  "tAMP",
  "tRUBYCODE",
  "$start",
  "target",
  "rules",
  "rule",
  "class",
  "module",
  "rubycode",
  "class_open",
  "module_items",
  "module_open",
  "module_item",
  "module_include",
  "module_prepend",
  "method_def",
  "arglist",
  "type",
  "single_type",
  "args",
  "arg",
  "required_arg",
  "opt_arg",
  "rest_arg",
  "kwarg",
  "kwoptarg",
  "kwrestarg",
  "blockarg",
  "typed_value" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'signatures_parser.y', 21)
  def _reduce_9(val, _values, result)
                              @builder.apply_module_items(val[1], on: val[0])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 26)
  def _reduce_10(val, _values, result)
                              result = @builder.find_or_create_class(name_t: val[1])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 30)
  def _reduce_11(val, _values, result)
                              result = @builder.find_or_create_class(name_t: val[1], superclass_t: val[3])
                        
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'signatures_parser.y', 36)
  def _reduce_13(val, _values, result)
                              @builder.apply_module_items(val[1], on: val[0])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 41)
  def _reduce_14(val, _values, result)
                              result = @builder.find_or_create_module(name_t: val[1])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 46)
  def _reduce_15(val, _values, result)
                              result = [val[0]]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 50)
  def _reduce_16(val, _values, result)
                              result = [val[0]] + val[1]
                        
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'signatures_parser.y', 59)
  def _reduce_20(val, _values, result)
                              result = @builder.method_def(name_t: val[1], arguments: val[3], returns: val[6])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 63)
  def _reduce_21(val, _values, result)
                              result = @builder.method_def(name_t: val[1],                    returns: val[3])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 68)
  def _reduce_22(val, _values, result)
                              result = @builder.module_include(name_t: val[1])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 73)
  def _reduce_23(val, _values, result)
                              result = @builder.module_prepend(name_t: val[1])
                        
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'signatures_parser.y', 79)
  def _reduce_25(val, _values, result)
                              result = @builder.union(val[0], val[2])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 83)
  def _reduce_26(val, _values, result)
                              result = @builder.minus(val[0], val[2])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 87)
  def _reduce_27(val, _values, result)
                              result = @builder.any_type
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 92)
  def _reduce_28(val, _values, result)
                              result = @builder.instance_of(name_t: val[0])
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 97)
  def _reduce_29(val, _values, result)
                              result = val[0]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 101)
  def _reduce_30(val, _values, result)
                              result = @builder.any_args
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 105)
  def _reduce_31(val, _values, result)
                              result = []
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 110)
  def _reduce_32(val, _values, result)
                              result = [val[0]]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 114)
  def _reduce_33(val, _values, result)
                              result = val[0] + [val[2]]
                        
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'signatures_parser.y', 127)
  def _reduce_41(val, _values, result)
                              name_t, type = val[0]
                          result = @builder.arg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 133)
  def _reduce_42(val, _values, result)
                              name_t, type = val[1]
                          result = @builder.optarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 139)
  def _reduce_43(val, _values, result)
                              name_t, type = val[1]
                          result = @builder.restarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 145)
  def _reduce_44(val, _values, result)
                              name_t, type = val[0]
                          result = @builder.kwarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 151)
  def _reduce_45(val, _values, result)
                              name_t, type = val[1]
                          result = @builder.kwoptarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 157)
  def _reduce_46(val, _values, result)
                              name_t, type = val[1]
                          result = @builder.kwrestarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 163)
  def _reduce_47(val, _values, result)
                              name_t, type = val[1]
                          result = @builder.blockarg(name_t: name_t, type: type)
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 169)
  def _reduce_48(val, _values, result)
                              result = [val[0], val[2]]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'signatures_parser.y', 174)
  def _reduce_49(val, _values, result)
                              @registry.instance_eval(val[0], '__RUBY__')
                        
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class SignaturesParser
    end   # module AST
  end   # module TypedRuby
